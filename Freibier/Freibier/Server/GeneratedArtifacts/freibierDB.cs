//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_beerRecipients_countries", "countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.countriesItem), "beerRecipients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.beerRecipientsItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_beerSuppliers_beerTypes", "beerTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.beerTypesItem), "beerSuppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.beerSuppliersItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_deliveredBeers_beerTypes", "beerTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.beerTypesItem), "deliveredBeers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.deliveredBeersItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_deliveredBeers_deliveries", "deliveries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.deliveriesItem), "deliveredBeers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.deliveredBeersItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_deliveries_beerRecipients", "beerRecipients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.beerRecipientsItem), "deliveries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.deliveriesItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Order_orderedBeersItem1", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.Order), "orderedBeers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.orderedBeersItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "suppliersItem_Order1", "suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.suppliersItem), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_suppliers_countries", "countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.countriesItem), "suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.suppliersItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_beerSuppliers_suppliers", "suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.suppliersItem), "beerSuppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.beerSuppliersItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_orderedBeers_beerSuppliers", "beerSuppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(freibierDB.Implementation.beerSuppliersItem), "orderedBeers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(freibierDB.Implementation.orderedBeersItem), true)]

#endregion

namespace freibierDB.Implementation
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class freibierDBObjectContext : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues freibierDBObjectContext-Objekt mithilfe der in Abschnitt 'freibierDBObjectContext' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public freibierDBObjectContext() : base("name=freibierDBObjectContext", "freibierDBObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues freibierDBObjectContext-Objekt.
        /// </summary>
        public freibierDBObjectContext(string connectionString) : base(connectionString, "freibierDBObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues freibierDBObjectContext-Objekt.
        /// </summary>
        public freibierDBObjectContext(EntityConnection connection) : base(connection, "freibierDBObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<beerRecipientsItem> beerRecipients
        {
            get
            {
                if ((_beerRecipients == null))
                {
                    _beerRecipients = base.CreateObjectSet<beerRecipientsItem>("beerRecipients");
                }
                return _beerRecipients;
            }
        }
        private ObjectSet<beerRecipientsItem> _beerRecipients;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<beerSuppliersItem> beerSuppliers
        {
            get
            {
                if ((_beerSuppliers == null))
                {
                    _beerSuppliers = base.CreateObjectSet<beerSuppliersItem>("beerSuppliers");
                }
                return _beerSuppliers;
            }
        }
        private ObjectSet<beerSuppliersItem> _beerSuppliers;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<beerTypesItem> beerTypes
        {
            get
            {
                if ((_beerTypes == null))
                {
                    _beerTypes = base.CreateObjectSet<beerTypesItem>("beerTypes");
                }
                return _beerTypes;
            }
        }
        private ObjectSet<beerTypesItem> _beerTypes;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<countriesItem> countries
        {
            get
            {
                if ((_countries == null))
                {
                    _countries = base.CreateObjectSet<countriesItem>("countries");
                }
                return _countries;
            }
        }
        private ObjectSet<countriesItem> _countries;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<deliveredBeersItem> deliveredBeers
        {
            get
            {
                if ((_deliveredBeers == null))
                {
                    _deliveredBeers = base.CreateObjectSet<deliveredBeersItem>("deliveredBeers");
                }
                return _deliveredBeers;
            }
        }
        private ObjectSet<deliveredBeersItem> _deliveredBeers;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<deliveriesItem> deliveries
        {
            get
            {
                if ((_deliveries == null))
                {
                    _deliveries = base.CreateObjectSet<deliveriesItem>("deliveries");
                }
                return _deliveries;
            }
        }
        private ObjectSet<deliveriesItem> _deliveries;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<driversItem> drivers
        {
            get
            {
                if ((_drivers == null))
                {
                    _drivers = base.CreateObjectSet<driversItem>("drivers");
                }
                return _drivers;
            }
        }
        private ObjectSet<driversItem> _drivers;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<orderedBeersItem> orderedBeers
        {
            get
            {
                if ((_orderedBeers == null))
                {
                    _orderedBeers = base.CreateObjectSet<orderedBeersItem>("orderedBeers");
                }
                return _orderedBeers;
            }
        }
        private ObjectSet<orderedBeersItem> _orderedBeers;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Order> orders
        {
            get
            {
                if ((_orders == null))
                {
                    _orders = base.CreateObjectSet<Order>("orders");
                }
                return _orders;
            }
        }
        private ObjectSet<Order> _orders;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<suppliersItem> suppliers
        {
            get
            {
                if ((_suppliers == null))
                {
                    _suppliers = base.CreateObjectSet<suppliersItem>("suppliers");
                }
                return _suppliers;
            }
        }
        private ObjectSet<suppliersItem> _suppliers;

        #endregion

        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'beerRecipients'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddTobeerRecipients(beerRecipientsItem beerRecipientsItem)
        {
            base.AddObject("beerRecipients", beerRecipientsItem);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'beerSuppliers'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddTobeerSuppliers(beerSuppliersItem beerSuppliersItem)
        {
            base.AddObject("beerSuppliers", beerSuppliersItem);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'beerTypes'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddTobeerTypes(beerTypesItem beerTypesItem)
        {
            base.AddObject("beerTypes", beerTypesItem);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'countries'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddTocountries(countriesItem countriesItem)
        {
            base.AddObject("countries", countriesItem);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'deliveredBeers'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddTodeliveredBeers(deliveredBeersItem deliveredBeersItem)
        {
            base.AddObject("deliveredBeers", deliveredBeersItem);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'deliveries'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddTodeliveries(deliveriesItem deliveriesItem)
        {
            base.AddObject("deliveries", deliveriesItem);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'drivers'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddTodrivers(driversItem driversItem)
        {
            base.AddObject("drivers", driversItem);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'orderedBeers'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToorderedBeers(orderedBeersItem orderedBeersItem)
        {
            base.AddObject("orderedBeers", orderedBeersItem);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'orders'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToorders(Order order)
        {
            base.AddObject("orders", order);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'suppliers'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddTosuppliers(suppliersItem suppliersItem)
        {
            base.AddObject("suppliers", suppliersItem);
        }

        #endregion

    }

    #endregion

    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="beerRecipientsItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class beerRecipientsItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues beerRecipientsItem-Objekt.
        /// </summary>
        /// <param name="pK_beerRecipients">Anfangswert der Eigenschaft PK_beerRecipients.</param>
        /// <param name="name">Anfangswert der Eigenschaft name.</param>
        /// <param name="fK_countries">Anfangswert der Eigenschaft FK_countries.</param>
        public static beerRecipientsItem CreatebeerRecipientsItem(global::System.Int32 pK_beerRecipients, global::System.String name, global::System.Int32 fK_countries)
        {
            beerRecipientsItem beerRecipientsItem = new beerRecipientsItem();
            beerRecipientsItem.PK_beerRecipients = pK_beerRecipients;
            beerRecipientsItem.name = name;
            beerRecipientsItem.FK_countries = fK_countries;
            return beerRecipientsItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_beerRecipients
        {
            get
            {
                return _PK_beerRecipients;
            }
            set
            {
                if (_PK_beerRecipients != value)
                {
                    OnPK_beerRecipientsChanging(value);
                    ReportPropertyChanging("PK_beerRecipients");
                    _PK_beerRecipients = value;
                    ReportPropertyChanged("PK_beerRecipients");
                    OnPK_beerRecipientsChanged();
                }
            }
        }
        private global::System.Int32 _PK_beerRecipients;
        partial void OnPK_beerRecipientsChanging(global::System.Int32 value);
        partial void OnPK_beerRecipientsChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = value;
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = value;
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = value;
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mail
        {
            get
            {
                return _mail;
            }
            set
            {
                OnmailChanging(value);
                ReportPropertyChanging("mail");
                _mail = value;
                ReportPropertyChanged("mail");
                OnmailChanged();
            }
        }
        private global::System.String _mail;
        partial void OnmailChanging(global::System.String value);
        partial void OnmailChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_countries
        {
            get
            {
                return _FK_countries;
            }
            set
            {
                OnFK_countriesChanging(value);
                ReportPropertyChanging("FK_countries");
                _FK_countries = value;
                ReportPropertyChanged("FK_countries");
                OnFK_countriesChanged();
            }
        }
        private global::System.Int32 _FK_countries;
        partial void OnFK_countriesChanging(global::System.Int32 value);
        partial void OnFK_countriesChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_beerRecipients_countries", "countries")]
        public countriesItem country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<countriesItem>("LightSwitchApplication.FK_beerRecipients_countries", "countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<countriesItem>("LightSwitchApplication.FK_beerRecipients_countries", "countries").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<countriesItem> countryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<countriesItem>("LightSwitchApplication.FK_beerRecipients_countries", "countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<countriesItem>("LightSwitchApplication.FK_beerRecipients_countries", "countries", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_deliveries_beerRecipients", "deliveries")]
        public EntityCollection<deliveriesItem> deliveries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<deliveriesItem>("LightSwitchApplication.FK_deliveries_beerRecipients", "deliveries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<deliveriesItem>("LightSwitchApplication.FK_deliveries_beerRecipients", "deliveries", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="beerSuppliersItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class beerSuppliersItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues beerSuppliersItem-Objekt.
        /// </summary>
        /// <param name="pK_beerSuppliers">Anfangswert der Eigenschaft PK_beerSuppliers.</param>
        /// <param name="price">Anfangswert der Eigenschaft price.</param>
        /// <param name="fK_beerTypes">Anfangswert der Eigenschaft FK_beerTypes.</param>
        /// <param name="fK_suppliers">Anfangswert der Eigenschaft FK_suppliers.</param>
        public static beerSuppliersItem CreatebeerSuppliersItem(global::System.Int32 pK_beerSuppliers, global::System.Decimal price, global::System.Int32 fK_beerTypes, global::System.Int32 fK_suppliers)
        {
            beerSuppliersItem beerSuppliersItem = new beerSuppliersItem();
            beerSuppliersItem.PK_beerSuppliers = pK_beerSuppliers;
            beerSuppliersItem.price = price;
            beerSuppliersItem.FK_beerTypes = fK_beerTypes;
            beerSuppliersItem.FK_suppliers = fK_suppliers;
            return beerSuppliersItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_beerSuppliers
        {
            get
            {
                return _PK_beerSuppliers;
            }
            set
            {
                if (_PK_beerSuppliers != value)
                {
                    OnPK_beerSuppliersChanging(value);
                    ReportPropertyChanging("PK_beerSuppliers");
                    _PK_beerSuppliers = value;
                    ReportPropertyChanged("PK_beerSuppliers");
                    OnPK_beerSuppliersChanged();
                }
            }
        }
        private global::System.Int32 _PK_beerSuppliers;
        partial void OnPK_beerSuppliersChanging(global::System.Int32 value);
        partial void OnPK_beerSuppliersChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = value;
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Decimal _price;
        partial void OnpriceChanging(global::System.Decimal value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_beerTypes
        {
            get
            {
                return _FK_beerTypes;
            }
            set
            {
                OnFK_beerTypesChanging(value);
                ReportPropertyChanging("FK_beerTypes");
                _FK_beerTypes = value;
                ReportPropertyChanged("FK_beerTypes");
                OnFK_beerTypesChanged();
            }
        }
        private global::System.Int32 _FK_beerTypes;
        partial void OnFK_beerTypesChanging(global::System.Int32 value);
        partial void OnFK_beerTypesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_suppliers
        {
            get
            {
                return _FK_suppliers;
            }
            set
            {
                OnFK_suppliersChanging(value);
                ReportPropertyChanging("FK_suppliers");
                _FK_suppliers = value;
                ReportPropertyChanged("FK_suppliers");
                OnFK_suppliersChanged();
            }
        }
        private global::System.Int32 _FK_suppliers;
        partial void OnFK_suppliersChanging(global::System.Int32 value);
        partial void OnFK_suppliersChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_beerSuppliers_beerTypes", "beerTypes")]
        public beerTypesItem beerType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerTypesItem>("LightSwitchApplication.FK_beerSuppliers_beerTypes", "beerTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerTypesItem>("LightSwitchApplication.FK_beerSuppliers_beerTypes", "beerTypes").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<beerTypesItem> beerTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerTypesItem>("LightSwitchApplication.FK_beerSuppliers_beerTypes", "beerTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<beerTypesItem>("LightSwitchApplication.FK_beerSuppliers_beerTypes", "beerTypes", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_beerSuppliers_suppliers", "suppliers")]
        public suppliersItem supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<suppliersItem>("LightSwitchApplication.FK_beerSuppliers_suppliers", "suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<suppliersItem>("LightSwitchApplication.FK_beerSuppliers_suppliers", "suppliers").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<suppliersItem> supplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<suppliersItem>("LightSwitchApplication.FK_beerSuppliers_suppliers", "suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<suppliersItem>("LightSwitchApplication.FK_beerSuppliers_suppliers", "suppliers", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_orderedBeers_beerSuppliers", "orderedBeers")]
        public EntityCollection<orderedBeersItem> orderedBeers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<orderedBeersItem>("LightSwitchApplication.FK_orderedBeers_beerSuppliers", "orderedBeers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<orderedBeersItem>("LightSwitchApplication.FK_orderedBeers_beerSuppliers", "orderedBeers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="beerTypesItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class beerTypesItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues beerTypesItem-Objekt.
        /// </summary>
        /// <param name="pK_beerTypes">Anfangswert der Eigenschaft PK_beerTypes.</param>
        /// <param name="name">Anfangswert der Eigenschaft name.</param>
        public static beerTypesItem CreatebeerTypesItem(global::System.Int32 pK_beerTypes, global::System.String name)
        {
            beerTypesItem beerTypesItem = new beerTypesItem();
            beerTypesItem.PK_beerTypes = pK_beerTypes;
            beerTypesItem.name = name;
            return beerTypesItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_beerTypes
        {
            get
            {
                return _PK_beerTypes;
            }
            set
            {
                if (_PK_beerTypes != value)
                {
                    OnPK_beerTypesChanging(value);
                    ReportPropertyChanging("PK_beerTypes");
                    _PK_beerTypes = value;
                    ReportPropertyChanged("PK_beerTypes");
                    OnPK_beerTypesChanged();
                }
            }
        }
        private global::System.Int32 _PK_beerTypes;
        partial void OnPK_beerTypesChanging(global::System.Int32 value);
        partial void OnPK_beerTypesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = value;
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_beerSuppliers_beerTypes", "beerSuppliers")]
        public EntityCollection<beerSuppliersItem> beerSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<beerSuppliersItem>("LightSwitchApplication.FK_beerSuppliers_beerTypes", "beerSuppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<beerSuppliersItem>("LightSwitchApplication.FK_beerSuppliers_beerTypes", "beerSuppliers", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_deliveredBeers_beerTypes", "deliveredBeers")]
        public EntityCollection<deliveredBeersItem> deliveredBeers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<deliveredBeersItem>("LightSwitchApplication.FK_deliveredBeers_beerTypes", "deliveredBeers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<deliveredBeersItem>("LightSwitchApplication.FK_deliveredBeers_beerTypes", "deliveredBeers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="countriesItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class countriesItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues countriesItem-Objekt.
        /// </summary>
        /// <param name="pK_countries">Anfangswert der Eigenschaft PK_countries.</param>
        /// <param name="customs">Anfangswert der Eigenschaft customs.</param>
        /// <param name="distance">Anfangswert der Eigenschaft distance.</param>
        /// <param name="name">Anfangswert der Eigenschaft name.</param>
        public static countriesItem CreatecountriesItem(global::System.Int32 pK_countries, global::System.Decimal customs, global::System.Int32 distance, global::System.String name)
        {
            countriesItem countriesItem = new countriesItem();
            countriesItem.PK_countries = pK_countries;
            countriesItem.customs = customs;
            countriesItem.distance = distance;
            countriesItem.name = name;
            return countriesItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_countries
        {
            get
            {
                return _PK_countries;
            }
            set
            {
                if (_PK_countries != value)
                {
                    OnPK_countriesChanging(value);
                    ReportPropertyChanging("PK_countries");
                    _PK_countries = value;
                    ReportPropertyChanged("PK_countries");
                    OnPK_countriesChanged();
                }
            }
        }
        private global::System.Int32 _PK_countries;
        partial void OnPK_countriesChanging(global::System.Int32 value);
        partial void OnPK_countriesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal customs
        {
            get
            {
                return _customs;
            }
            set
            {
                OncustomsChanging(value);
                ReportPropertyChanging("customs");
                _customs = value;
                ReportPropertyChanged("customs");
                OncustomsChanged();
            }
        }
        private global::System.Decimal _customs;
        partial void OncustomsChanging(global::System.Decimal value);
        partial void OncustomsChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 distance
        {
            get
            {
                return _distance;
            }
            set
            {
                OndistanceChanging(value);
                ReportPropertyChanging("distance");
                _distance = value;
                ReportPropertyChanged("distance");
                OndistanceChanged();
            }
        }
        private global::System.Int32 _distance;
        partial void OndistanceChanging(global::System.Int32 value);
        partial void OndistanceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = value;
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_beerRecipients_countries", "beerRecipients")]
        public EntityCollection<beerRecipientsItem> beerRecipients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<beerRecipientsItem>("LightSwitchApplication.FK_beerRecipients_countries", "beerRecipients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<beerRecipientsItem>("LightSwitchApplication.FK_beerRecipients_countries", "beerRecipients", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_suppliers_countries", "suppliers")]
        public EntityCollection<suppliersItem> suppliers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<suppliersItem>("LightSwitchApplication.FK_suppliers_countries", "suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<suppliersItem>("LightSwitchApplication.FK_suppliers_countries", "suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="deliveredBeersItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class deliveredBeersItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues deliveredBeersItem-Objekt.
        /// </summary>
        /// <param name="pK_deliveredBeers">Anfangswert der Eigenschaft PK_deliveredBeers.</param>
        /// <param name="amount">Anfangswert der Eigenschaft amount.</param>
        /// <param name="fK_beerTypes">Anfangswert der Eigenschaft FK_beerTypes.</param>
        /// <param name="fK_deliveries">Anfangswert der Eigenschaft FK_deliveries.</param>
        public static deliveredBeersItem CreatedeliveredBeersItem(global::System.Int32 pK_deliveredBeers, global::System.Int32 amount, global::System.Int32 fK_beerTypes, global::System.Int32 fK_deliveries)
        {
            deliveredBeersItem deliveredBeersItem = new deliveredBeersItem();
            deliveredBeersItem.PK_deliveredBeers = pK_deliveredBeers;
            deliveredBeersItem.amount = amount;
            deliveredBeersItem.FK_beerTypes = fK_beerTypes;
            deliveredBeersItem.FK_deliveries = fK_deliveries;
            return deliveredBeersItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_deliveredBeers
        {
            get
            {
                return _PK_deliveredBeers;
            }
            set
            {
                if (_PK_deliveredBeers != value)
                {
                    OnPK_deliveredBeersChanging(value);
                    ReportPropertyChanging("PK_deliveredBeers");
                    _PK_deliveredBeers = value;
                    ReportPropertyChanged("PK_deliveredBeers");
                    OnPK_deliveredBeersChanged();
                }
            }
        }
        private global::System.Int32 _PK_deliveredBeers;
        partial void OnPK_deliveredBeersChanging(global::System.Int32 value);
        partial void OnPK_deliveredBeersChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = value;
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private global::System.Int32 _amount;
        partial void OnamountChanging(global::System.Int32 value);
        partial void OnamountChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_beerTypes
        {
            get
            {
                return _FK_beerTypes;
            }
            set
            {
                OnFK_beerTypesChanging(value);
                ReportPropertyChanging("FK_beerTypes");
                _FK_beerTypes = value;
                ReportPropertyChanged("FK_beerTypes");
                OnFK_beerTypesChanged();
            }
        }
        private global::System.Int32 _FK_beerTypes;
        partial void OnFK_beerTypesChanging(global::System.Int32 value);
        partial void OnFK_beerTypesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_deliveries
        {
            get
            {
                return _FK_deliveries;
            }
            set
            {
                OnFK_deliveriesChanging(value);
                ReportPropertyChanging("FK_deliveries");
                _FK_deliveries = value;
                ReportPropertyChanged("FK_deliveries");
                OnFK_deliveriesChanged();
            }
        }
        private global::System.Int32 _FK_deliveries;
        partial void OnFK_deliveriesChanging(global::System.Int32 value);
        partial void OnFK_deliveriesChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_deliveredBeers_beerTypes", "beerTypes")]
        public beerTypesItem beerType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerTypesItem>("LightSwitchApplication.FK_deliveredBeers_beerTypes", "beerTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerTypesItem>("LightSwitchApplication.FK_deliveredBeers_beerTypes", "beerTypes").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<beerTypesItem> beerTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerTypesItem>("LightSwitchApplication.FK_deliveredBeers_beerTypes", "beerTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<beerTypesItem>("LightSwitchApplication.FK_deliveredBeers_beerTypes", "beerTypes", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_deliveredBeers_deliveries", "deliveries")]
        public deliveriesItem delivery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliveriesItem>("LightSwitchApplication.FK_deliveredBeers_deliveries", "deliveries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliveriesItem>("LightSwitchApplication.FK_deliveredBeers_deliveries", "deliveries").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<deliveriesItem> deliveryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliveriesItem>("LightSwitchApplication.FK_deliveredBeers_deliveries", "deliveries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<deliveriesItem>("LightSwitchApplication.FK_deliveredBeers_deliveries", "deliveries", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="deliveriesItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class deliveriesItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues deliveriesItem-Objekt.
        /// </summary>
        /// <param name="pK_deliveries">Anfangswert der Eigenschaft PK_deliveries.</param>
        /// <param name="orderDate">Anfangswert der Eigenschaft orderDate.</param>
        /// <param name="deliveryDate">Anfangswert der Eigenschaft deliveryDate.</param>
        /// <param name="fK_beerRecipients">Anfangswert der Eigenschaft FK_beerRecipients.</param>
        public static deliveriesItem CreatedeliveriesItem(global::System.Int32 pK_deliveries, global::System.DateTime orderDate, global::System.DateTime deliveryDate, global::System.Int32 fK_beerRecipients)
        {
            deliveriesItem deliveriesItem = new deliveriesItem();
            deliveriesItem.PK_deliveries = pK_deliveries;
            deliveriesItem.orderDate = orderDate;
            deliveriesItem.deliveryDate = deliveryDate;
            deliveriesItem.FK_beerRecipients = fK_beerRecipients;
            return deliveriesItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_deliveries
        {
            get
            {
                return _PK_deliveries;
            }
            set
            {
                if (_PK_deliveries != value)
                {
                    OnPK_deliveriesChanging(value);
                    ReportPropertyChanging("PK_deliveries");
                    _PK_deliveries = value;
                    ReportPropertyChanged("PK_deliveries");
                    OnPK_deliveriesChanged();
                }
            }
        }
        private global::System.Int32 _PK_deliveries;
        partial void OnPK_deliveriesChanging(global::System.Int32 value);
        partial void OnPK_deliveriesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime orderDate
        {
            get
            {
                return _orderDate;
            }
            set
            {
                OnorderDateChanging(value);
                ReportPropertyChanging("orderDate");
                _orderDate = value;
                ReportPropertyChanged("orderDate");
                OnorderDateChanged();
            }
        }
        private global::System.DateTime _orderDate;
        partial void OnorderDateChanging(global::System.DateTime value);
        partial void OnorderDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime deliveryDate
        {
            get
            {
                return _deliveryDate;
            }
            set
            {
                OndeliveryDateChanging(value);
                ReportPropertyChanging("deliveryDate");
                _deliveryDate = value;
                ReportPropertyChanged("deliveryDate");
                OndeliveryDateChanged();
            }
        }
        private global::System.DateTime _deliveryDate;
        partial void OndeliveryDateChanging(global::System.DateTime value);
        partial void OndeliveryDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> billingDate
        {
            get
            {
                return _billingDate;
            }
            set
            {
                OnbillingDateChanging(value);
                ReportPropertyChanging("billingDate");
                _billingDate = value;
                ReportPropertyChanged("billingDate");
                OnbillingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _billingDate;
        partial void OnbillingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnbillingDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invoiceNumber
        {
            get
            {
                return _invoiceNumber;
            }
            set
            {
                OninvoiceNumberChanging(value);
                ReportPropertyChanging("invoiceNumber");
                _invoiceNumber = value;
                ReportPropertyChanged("invoiceNumber");
                OninvoiceNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _invoiceNumber;
        partial void OninvoiceNumberChanging(Nullable<global::System.Int32> value);
        partial void OninvoiceNumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_beerRecipients
        {
            get
            {
                return _FK_beerRecipients;
            }
            set
            {
                OnFK_beerRecipientsChanging(value);
                ReportPropertyChanging("FK_beerRecipients");
                _FK_beerRecipients = value;
                ReportPropertyChanged("FK_beerRecipients");
                OnFK_beerRecipientsChanged();
            }
        }
        private global::System.Int32 _FK_beerRecipients;
        partial void OnFK_beerRecipientsChanging(global::System.Int32 value);
        partial void OnFK_beerRecipientsChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_deliveredBeers_deliveries", "deliveredBeers")]
        public EntityCollection<deliveredBeersItem> deliveredBeers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<deliveredBeersItem>("LightSwitchApplication.FK_deliveredBeers_deliveries", "deliveredBeers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<deliveredBeersItem>("LightSwitchApplication.FK_deliveredBeers_deliveries", "deliveredBeers", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_deliveries_beerRecipients", "beerRecipients")]
        public beerRecipientsItem beerRecipient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerRecipientsItem>("LightSwitchApplication.FK_deliveries_beerRecipients", "beerRecipients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerRecipientsItem>("LightSwitchApplication.FK_deliveries_beerRecipients", "beerRecipients").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<beerRecipientsItem> beerRecipientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerRecipientsItem>("LightSwitchApplication.FK_deliveries_beerRecipients", "beerRecipients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<beerRecipientsItem>("LightSwitchApplication.FK_deliveries_beerRecipients", "beerRecipients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="driversItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class driversItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues driversItem-Objekt.
        /// </summary>
        /// <param name="pK_drivers">Anfangswert der Eigenschaft PK_drivers.</param>
        /// <param name="driver">Anfangswert der Eigenschaft driver.</param>
        /// <param name="truck">Anfangswert der Eigenschaft truck.</param>
        public static driversItem CreatedriversItem(global::System.Int32 pK_drivers, global::System.String driver, global::System.Int32 truck)
        {
            driversItem driversItem = new driversItem();
            driversItem.PK_drivers = pK_drivers;
            driversItem.driver = driver;
            driversItem.truck = truck;
            return driversItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_drivers
        {
            get
            {
                return _PK_drivers;
            }
            set
            {
                if (_PK_drivers != value)
                {
                    OnPK_driversChanging(value);
                    ReportPropertyChanging("PK_drivers");
                    _PK_drivers = value;
                    ReportPropertyChanged("PK_drivers");
                    OnPK_driversChanged();
                }
            }
        }
        private global::System.Int32 _PK_drivers;
        partial void OnPK_driversChanging(global::System.Int32 value);
        partial void OnPK_driversChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String driver
        {
            get
            {
                return _driver;
            }
            set
            {
                OndriverChanging(value);
                ReportPropertyChanging("driver");
                _driver = value;
                ReportPropertyChanged("driver");
                OndriverChanged();
            }
        }
        private global::System.String _driver;
        partial void OndriverChanging(global::System.String value);
        partial void OndriverChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 truck
        {
            get
            {
                return _truck;
            }
            set
            {
                OntruckChanging(value);
                ReportPropertyChanging("truck");
                _truck = value;
                ReportPropertyChanged("truck");
                OntruckChanged();
            }
        }
        private global::System.Int32 _truck;
        partial void OntruckChanging(global::System.Int32 value);
        partial void OntruckChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Order-Objekt.
        /// </summary>
        /// <param name="pK_orders">Anfangswert der Eigenschaft PK_orders.</param>
        /// <param name="price">Anfangswert der Eigenschaft price.</param>
        /// <param name="received">Anfangswert der Eigenschaft received.</param>
        /// <param name="fK_suppliers">Anfangswert der Eigenschaft FK_suppliers.</param>
        public static Order CreateOrder(global::System.Int32 pK_orders, global::System.Decimal price, global::System.Boolean received, global::System.Int32 fK_suppliers)
        {
            Order order = new Order();
            order.PK_orders = pK_orders;
            order.price = price;
            order.received = received;
            order.FK_suppliers = fK_suppliers;
            return order;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_orders
        {
            get
            {
                return _PK_orders;
            }
            set
            {
                if (_PK_orders != value)
                {
                    OnPK_ordersChanging(value);
                    ReportPropertyChanging("PK_orders");
                    _PK_orders = value;
                    ReportPropertyChanged("PK_orders");
                    OnPK_ordersChanged();
                }
            }
        }
        private global::System.Int32 _PK_orders;
        partial void OnPK_ordersChanging(global::System.Int32 value);
        partial void OnPK_ordersChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = value;
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Decimal _price;
        partial void OnpriceChanging(global::System.Decimal value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean received
        {
            get
            {
                return _received;
            }
            set
            {
                OnreceivedChanging(value);
                ReportPropertyChanging("received");
                _received = value;
                ReportPropertyChanged("received");
                OnreceivedChanged();
            }
        }
        private global::System.Boolean _received;
        partial void OnreceivedChanging(global::System.Boolean value);
        partial void OnreceivedChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_suppliers
        {
            get
            {
                return _FK_suppliers;
            }
            set
            {
                OnFK_suppliersChanging(value);
                ReportPropertyChanging("FK_suppliers");
                _FK_suppliers = value;
                ReportPropertyChanged("FK_suppliers");
                OnFK_suppliersChanged();
            }
        }
        private global::System.Int32 _FK_suppliers;
        partial void OnFK_suppliersChanging(global::System.Int32 value);
        partial void OnFK_suppliersChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Order_orderedBeersItem1", "orderedBeers")]
        public EntityCollection<orderedBeersItem> orderedBeers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<orderedBeersItem>("LightSwitchApplication.Order_orderedBeersItem1", "orderedBeers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<orderedBeersItem>("LightSwitchApplication.Order_orderedBeersItem1", "orderedBeers", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "suppliersItem_Order1", "suppliers")]
        public suppliersItem supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<suppliersItem>("LightSwitchApplication.suppliersItem_Order1", "suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<suppliersItem>("LightSwitchApplication.suppliersItem_Order1", "suppliers").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<suppliersItem> supplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<suppliersItem>("LightSwitchApplication.suppliersItem_Order1", "suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<suppliersItem>("LightSwitchApplication.suppliersItem_Order1", "suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="orderedBeersItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class orderedBeersItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues orderedBeersItem-Objekt.
        /// </summary>
        /// <param name="pK_orderedBeers">Anfangswert der Eigenschaft PK_orderedBeers.</param>
        /// <param name="amount">Anfangswert der Eigenschaft amount.</param>
        /// <param name="price">Anfangswert der Eigenschaft price.</param>
        /// <param name="fK_orders">Anfangswert der Eigenschaft FK_orders.</param>
        /// <param name="fK_beerSuppliers">Anfangswert der Eigenschaft FK_beerSuppliers.</param>
        public static orderedBeersItem CreateorderedBeersItem(global::System.Int32 pK_orderedBeers, global::System.Int32 amount, global::System.Decimal price, global::System.Int32 fK_orders, global::System.Int32 fK_beerSuppliers)
        {
            orderedBeersItem orderedBeersItem = new orderedBeersItem();
            orderedBeersItem.PK_orderedBeers = pK_orderedBeers;
            orderedBeersItem.amount = amount;
            orderedBeersItem.price = price;
            orderedBeersItem.FK_orders = fK_orders;
            orderedBeersItem.FK_beerSuppliers = fK_beerSuppliers;
            return orderedBeersItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_orderedBeers
        {
            get
            {
                return _PK_orderedBeers;
            }
            set
            {
                if (_PK_orderedBeers != value)
                {
                    OnPK_orderedBeersChanging(value);
                    ReportPropertyChanging("PK_orderedBeers");
                    _PK_orderedBeers = value;
                    ReportPropertyChanged("PK_orderedBeers");
                    OnPK_orderedBeersChanged();
                }
            }
        }
        private global::System.Int32 _PK_orderedBeers;
        partial void OnPK_orderedBeersChanging(global::System.Int32 value);
        partial void OnPK_orderedBeersChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = value;
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private global::System.Int32 _amount;
        partial void OnamountChanging(global::System.Int32 value);
        partial void OnamountChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = value;
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Decimal _price;
        partial void OnpriceChanging(global::System.Decimal value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_orders
        {
            get
            {
                return _FK_orders;
            }
            set
            {
                OnFK_ordersChanging(value);
                ReportPropertyChanging("FK_orders");
                _FK_orders = value;
                ReportPropertyChanged("FK_orders");
                OnFK_ordersChanged();
            }
        }
        private global::System.Int32 _FK_orders;
        partial void OnFK_ordersChanging(global::System.Int32 value);
        partial void OnFK_ordersChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_beerSuppliers
        {
            get
            {
                return _FK_beerSuppliers;
            }
            set
            {
                OnFK_beerSuppliersChanging(value);
                ReportPropertyChanging("FK_beerSuppliers");
                _FK_beerSuppliers = value;
                ReportPropertyChanged("FK_beerSuppliers");
                OnFK_beerSuppliersChanged();
            }
        }
        private global::System.Int32 _FK_beerSuppliers;
        partial void OnFK_beerSuppliersChanging(global::System.Int32 value);
        partial void OnFK_beerSuppliersChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Order_orderedBeersItem1", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.Order_orderedBeersItem1", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.Order_orderedBeersItem1", "Order").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.Order_orderedBeersItem1", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.Order_orderedBeersItem1", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_orderedBeers_beerSuppliers", "beerSuppliers")]
        public beerSuppliersItem beerSupplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerSuppliersItem>("LightSwitchApplication.FK_orderedBeers_beerSuppliers", "beerSuppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerSuppliersItem>("LightSwitchApplication.FK_orderedBeers_beerSuppliers", "beerSuppliers").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<beerSuppliersItem> beerSupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<beerSuppliersItem>("LightSwitchApplication.FK_orderedBeers_beerSuppliers", "beerSuppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<beerSuppliersItem>("LightSwitchApplication.FK_orderedBeers_beerSuppliers", "beerSuppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="suppliersItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class suppliersItem : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues suppliersItem-Objekt.
        /// </summary>
        /// <param name="pK_suppliers">Anfangswert der Eigenschaft PK_suppliers.</param>
        /// <param name="name">Anfangswert der Eigenschaft name.</param>
        /// <param name="fK_countries">Anfangswert der Eigenschaft FK_countries.</param>
        public static suppliersItem CreatesuppliersItem(global::System.Int32 pK_suppliers, global::System.String name, global::System.Int32 fK_countries)
        {
            suppliersItem suppliersItem = new suppliersItem();
            suppliersItem.PK_suppliers = pK_suppliers;
            suppliersItem.name = name;
            suppliersItem.FK_countries = fK_countries;
            return suppliersItem;
        }

        #endregion

        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PK_suppliers
        {
            get
            {
                return _PK_suppliers;
            }
            set
            {
                if (_PK_suppliers != value)
                {
                    OnPK_suppliersChanging(value);
                    ReportPropertyChanging("PK_suppliers");
                    _PK_suppliers = value;
                    ReportPropertyChanged("PK_suppliers");
                    OnPK_suppliersChanged();
                }
            }
        }
        private global::System.Int32 _PK_suppliers;
        partial void OnPK_suppliersChanging(global::System.Int32 value);
        partial void OnPK_suppliersChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = value;
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = value;
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = value;
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mail
        {
            get
            {
                return _mail;
            }
            set
            {
                OnmailChanging(value);
                ReportPropertyChanging("mail");
                _mail = value;
                ReportPropertyChanged("mail");
                OnmailChanged();
            }
        }
        private global::System.String _mail;
        partial void OnmailChanging(global::System.String value);
        partial void OnmailChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> volumeDiscountPercent
        {
            get
            {
                return _volumeDiscountPercent;
            }
            set
            {
                OnvolumeDiscountPercentChanging(value);
                ReportPropertyChanging("volumeDiscountPercent");
                _volumeDiscountPercent = value;
                ReportPropertyChanged("volumeDiscountPercent");
                OnvolumeDiscountPercentChanged();
            }
        }
        private Nullable<global::System.Int32> _volumeDiscountPercent;
        partial void OnvolumeDiscountPercentChanging(Nullable<global::System.Int32> value);
        partial void OnvolumeDiscountPercentChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> volumeDiscountRequiredQuantity
        {
            get
            {
                return _volumeDiscountRequiredQuantity;
            }
            set
            {
                OnvolumeDiscountRequiredQuantityChanging(value);
                ReportPropertyChanging("volumeDiscountRequiredQuantity");
                _volumeDiscountRequiredQuantity = value;
                ReportPropertyChanged("volumeDiscountRequiredQuantity");
                OnvolumeDiscountRequiredQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _volumeDiscountRequiredQuantity;
        partial void OnvolumeDiscountRequiredQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnvolumeDiscountRequiredQuantityChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FK_countries
        {
            get
            {
                return _FK_countries;
            }
            set
            {
                OnFK_countriesChanging(value);
                ReportPropertyChanging("FK_countries");
                _FK_countries = value;
                ReportPropertyChanged("FK_countries");
                OnFK_countriesChanged();
            }
        }
        private global::System.Int32 _FK_countries;
        partial void OnFK_countriesChanging(global::System.Int32 value);
        partial void OnFK_countriesChanged();

        #endregion

    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "suppliersItem_Order1", "Order")]
        public EntityCollection<Order> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.suppliersItem_Order1", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.suppliersItem_Order1", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_suppliers_countries", "countries")]
        public countriesItem country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<countriesItem>("LightSwitchApplication.FK_suppliers_countries", "countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<countriesItem>("LightSwitchApplication.FK_suppliers_countries", "countries").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<countriesItem> countryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<countriesItem>("LightSwitchApplication.FK_suppliers_countries", "countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<countriesItem>("LightSwitchApplication.FK_suppliers_countries", "countries", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_beerSuppliers_suppliers", "beerSuppliers")]
        public EntityCollection<beerSuppliersItem> beerSuppliers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<beerSuppliersItem>("LightSwitchApplication.FK_beerSuppliers_suppliers", "beerSuppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<beerSuppliersItem>("LightSwitchApplication.FK_beerSuppliers_suppliers", "beerSuppliers", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
