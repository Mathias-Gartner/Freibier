//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using global::System.Linq;

namespace LightSwitchApplication.Implementation
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationDataDataService
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataService<global::ApplicationData.Implementation.ApplicationDataObjectContext>
    {
    
        public ApplicationDataDataService() : base()
        {
        }
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService()
        {
            return new global::LightSwitchApplication.DataWorkspace().ApplicationData;
        }
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationDataServiceImplementation
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation<global::ApplicationData.Implementation.ApplicationDataObjectContext>
    {
        public ApplicationDataServiceImplementation(global::Microsoft.LightSwitch.IDataService dataService) : base(dataService)
        {
        }
    
    #region Queries
    #endregion

    #region Protected Methods
        protected override object CreateObject(global::System.Type type)
        {
            if (type == typeof(global::ApplicationData.Implementation.DeliveryConfirmOperation))
            {
                return new global::ApplicationData.Implementation.DeliveryConfirmOperation();
            }
            if (type == typeof(global::ApplicationData.Implementation.OrderReceivedOperation))
            {
                return new global::ApplicationData.Implementation.OrderReceivedOperation();
            }
            if (type == typeof(global::ApplicationData.Implementation.OrderGetFreightOperation))
            {
                return new global::ApplicationData.Implementation.OrderGetFreightOperation();
            }
            if (type == typeof(global::ApplicationData.Implementation.DeliveryGetFreightOperation))
            {
                return new global::ApplicationData.Implementation.DeliveryGetFreightOperation();
            }
    
            return base.CreateObject(type);
        }
    
        protected override global::ApplicationData.Implementation.ApplicationDataObjectContext CreateObjectContext()
        {
            string assemblyName = global::System.Reflection.Assembly.GetExecutingAssembly().GetName().Name;
            return new global::ApplicationData.Implementation.ApplicationDataObjectContext(base.GetEntityConnectionString(
                "_IntrinsicData", 
                "res://" + assemblyName + "/ApplicationData.csdl|res://" + assemblyName + "/ApplicationData.ssdl|res://" + assemblyName + "/ApplicationData.msl", 
                "System.Data.SqlClient"));
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.DeliveryConfirmOperation))
            {
                return new global::ApplicationData.Implementation.DeliveryConfirmOperation();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.OrderReceivedOperation))
            {
                return new global::ApplicationData.Implementation.OrderReceivedOperation();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.OrderGetFreightOperation))
            {
                return new global::ApplicationData.Implementation.OrderGetFreightOperation();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.DeliveryGetFreightOperation))
            {
                return new global::ApplicationData.Implementation.DeliveryGetFreightOperation();
            }
            return null;
        }
    
    #endregion
    
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class freibierDBDataService
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataService<global::freibierDB.Implementation.freibierDBObjectContext>
    {
    
        public freibierDBDataService() : base()
        {
        }
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService()
        {
            return new global::LightSwitchApplication.DataWorkspace().freibierDB;
        }
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class freibierDBServiceImplementation
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation<global::freibierDB.Implementation.freibierDBObjectContext>
    {
        public freibierDBServiceImplementation(global::Microsoft.LightSwitch.IDataService dataService) : base(dataService)
        {
        }
    
    #region Queries
        public global::System.Linq.IQueryable<global::freibierDB.Implementation.orderedBeersItem> orderedBeeryByOrder(global::System.Nullable<int> orderId)
        {
            global::System.Linq.IQueryable<global::freibierDB.Implementation.orderedBeersItem> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::freibierDB.Implementation.orderedBeersItem>("orderedBeers"),
                (o) => (orderId.HasValue && (o.ordersItem.id == orderId)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::freibierDB.Implementation.beerSuppliersItem> beerSuppliersBySupplier(global::System.Nullable<int> supplierId)
        {
            global::System.Linq.IQueryable<global::freibierDB.Implementation.beerSuppliersItem> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::freibierDB.Implementation.beerSuppliersItem>("beerSuppliers"),
                (b) => (supplierId.HasValue && (b.suppliersItem.id == supplierId)));
            return query;
        }
    
        public global::System.Linq.IQueryable<global::freibierDB.Implementation.deliveredBeersItem> deliveredBeersByDelivery(global::System.Nullable<int> deliveryId)
        {
            global::System.Linq.IQueryable<global::freibierDB.Implementation.deliveredBeersItem> query;
            query = global::System.Linq.Queryable.Where(
                this.GetQuery<global::freibierDB.Implementation.deliveredBeersItem>("deliveredBeers"),
                (d) => (deliveryId.HasValue && (d.deliveriesItem.id == deliveryId)));
            return query;
        }
    
    #endregion

    #region Protected Methods
        protected override object CreateObject(global::System.Type type)
        {
            if (type == typeof(global::freibierDB.Implementation.beerRecipientsItem))
            {
                return new global::freibierDB.Implementation.beerRecipientsItem();
            }
            if (type == typeof(global::freibierDB.Implementation.beerSuppliersItem))
            {
                return new global::freibierDB.Implementation.beerSuppliersItem();
            }
            if (type == typeof(global::freibierDB.Implementation.beerTypesItem))
            {
                return new global::freibierDB.Implementation.beerTypesItem();
            }
            if (type == typeof(global::freibierDB.Implementation.contactDetailsItem))
            {
                return new global::freibierDB.Implementation.contactDetailsItem();
            }
            if (type == typeof(global::freibierDB.Implementation.countriesItem))
            {
                return new global::freibierDB.Implementation.countriesItem();
            }
            if (type == typeof(global::freibierDB.Implementation.deliveredBeersItem))
            {
                return new global::freibierDB.Implementation.deliveredBeersItem();
            }
            if (type == typeof(global::freibierDB.Implementation.deliveriesItem))
            {
                return new global::freibierDB.Implementation.deliveriesItem();
            }
            if (type == typeof(global::freibierDB.Implementation.driversItem))
            {
                return new global::freibierDB.Implementation.driversItem();
            }
            if (type == typeof(global::freibierDB.Implementation.orderedBeersItem))
            {
                return new global::freibierDB.Implementation.orderedBeersItem();
            }
            if (type == typeof(global::freibierDB.Implementation.ordersItem))
            {
                return new global::freibierDB.Implementation.ordersItem();
            }
            if (type == typeof(global::freibierDB.Implementation.storageItem))
            {
                return new global::freibierDB.Implementation.storageItem();
            }
            if (type == typeof(global::freibierDB.Implementation.suppliersItem))
            {
                return new global::freibierDB.Implementation.suppliersItem();
            }
            if (type == typeof(global::freibierDB.Implementation.supplierStorageItem))
            {
                return new global::freibierDB.Implementation.supplierStorageItem();
            }
            if (type == typeof(global::freibierDB.Implementation.view_driver_nextDeliveriesItem))
            {
                return new global::freibierDB.Implementation.view_driver_nextDeliveriesItem();
            }
    
            return base.CreateObject(type);
        }
    
        protected override global::freibierDB.Implementation.freibierDBObjectContext CreateObjectContext()
        {
            string assemblyName = global::System.Reflection.Assembly.GetExecutingAssembly().GetName().Name;
            return new global::freibierDB.Implementation.freibierDBObjectContext(base.GetEntityConnectionString(
                "freibierDB", 
                "res://" + assemblyName + "/freibierDB.csdl|res://" + assemblyName + "/freibierDB.ssdl|res://" + assemblyName + "/freibierDB.msl", 
                "System.Data.SqlClient"));
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.beerRecipientsItem))
            {
                return new global::freibierDB.Implementation.beerRecipientsItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.beerSuppliersItem))
            {
                return new global::freibierDB.Implementation.beerSuppliersItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.beerTypesItem))
            {
                return new global::freibierDB.Implementation.beerTypesItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.contactDetailsItem))
            {
                return new global::freibierDB.Implementation.contactDetailsItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.countriesItem))
            {
                return new global::freibierDB.Implementation.countriesItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.deliveredBeersItem))
            {
                return new global::freibierDB.Implementation.deliveredBeersItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.deliveriesItem))
            {
                return new global::freibierDB.Implementation.deliveriesItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.driversItem))
            {
                return new global::freibierDB.Implementation.driversItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.orderedBeersItem))
            {
                return new global::freibierDB.Implementation.orderedBeersItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ordersItem))
            {
                return new global::freibierDB.Implementation.ordersItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.storageItem))
            {
                return new global::freibierDB.Implementation.storageItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.suppliersItem))
            {
                return new global::freibierDB.Implementation.suppliersItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.supplierStorageItem))
            {
                return new global::freibierDB.Implementation.supplierStorageItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.view_driver_nextDeliveriesItem))
            {
                return new global::freibierDB.Implementation.view_driver_nextDeliveriesItem();
            }
            return null;
        }
    
    #endregion
    
    }
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.ApplicationDataService();
            }
            if (dataServiceType == typeof(global::LightSwitchApplication.freibierDB))
            {
                return new global::LightSwitchApplication.freibierDBService();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationDataServiceImplementation(dataService);
            }
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.freibierDB))
            {
                return new global::LightSwitchApplication.Implementation.freibierDBServiceImplementation(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.DeliveryConfirmOperation) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.DeliveryConfirmOperation);
            }
            if (typeof(global::LightSwitchApplication.OrderReceivedOperation) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.OrderReceivedOperation);
            }
            if (typeof(global::LightSwitchApplication.OrderGetFreightOperation) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.OrderGetFreightOperation);
            }
            if (typeof(global::LightSwitchApplication.DeliveryGetFreightOperation) == definitionType)
            {
                return typeof(global::ApplicationData.Implementation.DeliveryGetFreightOperation);
            }
            if (typeof(global::LightSwitchApplication.beerRecipientsItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.beerRecipientsItem);
            }
            if (typeof(global::LightSwitchApplication.beerSuppliersItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.beerSuppliersItem);
            }
            if (typeof(global::LightSwitchApplication.beerTypesItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.beerTypesItem);
            }
            if (typeof(global::LightSwitchApplication.contactDetailsItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.contactDetailsItem);
            }
            if (typeof(global::LightSwitchApplication.countriesItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.countriesItem);
            }
            if (typeof(global::LightSwitchApplication.deliveredBeersItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.deliveredBeersItem);
            }
            if (typeof(global::LightSwitchApplication.deliveriesItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.deliveriesItem);
            }
            if (typeof(global::LightSwitchApplication.driversItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.driversItem);
            }
            if (typeof(global::LightSwitchApplication.orderedBeersItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.orderedBeersItem);
            }
            if (typeof(global::LightSwitchApplication.ordersItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.ordersItem);
            }
            if (typeof(global::LightSwitchApplication.storageItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.storageItem);
            }
            if (typeof(global::LightSwitchApplication.suppliersItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.suppliersItem);
            }
            if (typeof(global::LightSwitchApplication.supplierStorageItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.supplierStorageItem);
            }
            if (typeof(global::LightSwitchApplication.view_driver_nextDeliveriesItem) == definitionType)
            {
                return typeof(global::freibierDB.Implementation.view_driver_nextDeliveriesItem);
            }
            return null;
        }
    }
}

namespace ApplicationData.Implementation
{

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class DeliveryConfirmOperation :
        global::LightSwitchApplication.DeliveryConfirmOperation.DetailsClass.IImplementation
    {
    
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class OrderReceivedOperation :
        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.IImplementation
    {
    
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class OrderGetFreightOperation :
        global::LightSwitchApplication.OrderGetFreightOperation.DetailsClass.IImplementation
    {
    
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class DeliveryGetFreightOperation :
        global::LightSwitchApplication.DeliveryGetFreightOperation.DetailsClass.IImplementation
    {
    
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
}

namespace freibierDB.Implementation
{

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class beerRecipientsItem :
        global::LightSwitchApplication.beerRecipientsItem.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.beerRecipientsItem.DetailsClass.IImplementation.countriesItem
        {
            get
            {
                return this.countriesItem;
            }
            set
            {
                this.countriesItem = (global::freibierDB.Implementation.countriesItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("countriesItem");
                }
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.beerRecipientsItem.DetailsClass.IImplementation.contactDetails
        {
            get
            {
                return this.contactDetails;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.beerRecipientsItem.DetailsClass.IImplementation.deliveries
        {
            get
            {
                return this.deliveries;
            }
        }
        
        partial void OnFK_countriesChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("countriesItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class beerSuppliersItem :
        global::LightSwitchApplication.beerSuppliersItem.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.beerSuppliersItem.DetailsClass.IImplementation.beerTypesItem
        {
            get
            {
                return this.beerTypesItem;
            }
            set
            {
                this.beerTypesItem = (global::freibierDB.Implementation.beerTypesItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("beerTypesItem");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.beerSuppliersItem.DetailsClass.IImplementation.suppliersItem
        {
            get
            {
                return this.suppliersItem;
            }
            set
            {
                this.suppliersItem = (global::freibierDB.Implementation.suppliersItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("suppliersItem");
                }
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.beerSuppliersItem.DetailsClass.IImplementation.orderedBeers
        {
            get
            {
                return this.orderedBeers;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.beerSuppliersItem.DetailsClass.IImplementation.supplierStorage
        {
            get
            {
                return this.supplierStorage;
            }
        }
        
        partial void OnFK_beerTypesChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("beerTypesItem");
            }
        }
        
        partial void OnFK_suppliersChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("suppliersItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class beerTypesItem :
        global::LightSwitchApplication.beerTypesItem.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.beerTypesItem.DetailsClass.IImplementation.beerSuppliers
        {
            get
            {
                return this.beerSuppliers;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.beerTypesItem.DetailsClass.IImplementation.deliveredBeers
        {
            get
            {
                return this.deliveredBeers;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.beerTypesItem.DetailsClass.IImplementation.storage
        {
            get
            {
                return this.storage;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class contactDetailsItem :
        global::LightSwitchApplication.contactDetailsItem.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.contactDetailsItem.DetailsClass.IImplementation.beerRecipientsItem
        {
            get
            {
                return this.beerRecipientsItem;
            }
            set
            {
                this.beerRecipientsItem = (global::freibierDB.Implementation.beerRecipientsItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("beerRecipientsItem");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.contactDetailsItem.DetailsClass.IImplementation.suppliersItem
        {
            get
            {
                return this.suppliersItem;
            }
            set
            {
                this.suppliersItem = (global::freibierDB.Implementation.suppliersItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("suppliersItem");
                }
            }
        }
        
        partial void OnFK_beerRecipientsChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("beerRecipientsItem");
            }
        }
        
        partial void OnFK_suppliersChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("suppliersItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class countriesItem :
        global::LightSwitchApplication.countriesItem.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.countriesItem.DetailsClass.IImplementation.beerRecipients
        {
            get
            {
                return this.beerRecipients;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.countriesItem.DetailsClass.IImplementation.suppliers
        {
            get
            {
                return this.suppliers;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class deliveredBeersItem :
        global::LightSwitchApplication.deliveredBeersItem.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.deliveredBeersItem.DetailsClass.IImplementation.beerTypesItem
        {
            get
            {
                return this.beerTypesItem;
            }
            set
            {
                this.beerTypesItem = (global::freibierDB.Implementation.beerTypesItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("beerTypesItem");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.deliveredBeersItem.DetailsClass.IImplementation.deliveriesItem
        {
            get
            {
                return this.deliveriesItem;
            }
            set
            {
                this.deliveriesItem = (global::freibierDB.Implementation.deliveriesItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("deliveriesItem");
                }
            }
        }
        
        partial void OnFK_beerTypesChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("beerTypesItem");
            }
        }
        
        partial void OnFK_deliveriesChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("deliveriesItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class deliveriesItem :
        global::LightSwitchApplication.deliveriesItem.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.deliveriesItem.DetailsClass.IImplementation.deliveredBeers
        {
            get
            {
                return this.deliveredBeers;
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.deliveriesItem.DetailsClass.IImplementation.beerRecipientsItem
        {
            get
            {
                return this.beerRecipientsItem;
            }
            set
            {
                this.beerRecipientsItem = (global::freibierDB.Implementation.beerRecipientsItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("beerRecipientsItem");
                }
            }
        }
        
        partial void OnFK_beerRecipientsChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("beerRecipientsItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class driversItem :
        global::LightSwitchApplication.driversItem.DetailsClass.IImplementation
    {
    
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class orderedBeersItem :
        global::LightSwitchApplication.orderedBeersItem.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.orderedBeersItem.DetailsClass.IImplementation.beerSuppliersItem
        {
            get
            {
                return this.beerSuppliersItem;
            }
            set
            {
                this.beerSuppliersItem = (global::freibierDB.Implementation.beerSuppliersItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("beerSuppliersItem");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.orderedBeersItem.DetailsClass.IImplementation.ordersItem
        {
            get
            {
                return this.ordersItem;
            }
            set
            {
                this.ordersItem = (global::freibierDB.Implementation.ordersItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("ordersItem");
                }
            }
        }
        
        partial void OnFK_beerSuppliersChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("beerSuppliersItem");
            }
        }
        
        partial void OnFK_ordersChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("ordersItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class ordersItem :
        global::LightSwitchApplication.ordersItem.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.ordersItem.DetailsClass.IImplementation.orderedBeers
        {
            get
            {
                return this.orderedBeers;
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ordersItem.DetailsClass.IImplementation.suppliersItem
        {
            get
            {
                return this.suppliersItem;
            }
            set
            {
                this.suppliersItem = (global::freibierDB.Implementation.suppliersItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("suppliersItem");
                }
            }
        }
        
        partial void OnFK_suppliersChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("suppliersItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class storageItem :
        global::LightSwitchApplication.storageItem.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.storageItem.DetailsClass.IImplementation.beerTypesItem
        {
            get
            {
                return this.beerTypesItem;
            }
            set
            {
                this.beerTypesItem = (global::freibierDB.Implementation.beerTypesItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("beerTypesItem");
                }
            }
        }
        
        partial void OnFK_beerTypesChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("beerTypesItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class suppliersItem :
        global::LightSwitchApplication.suppliersItem.DetailsClass.IImplementation
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.suppliersItem.DetailsClass.IImplementation.beerSuppliers
        {
            get
            {
                return this.beerSuppliers;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.suppliersItem.DetailsClass.IImplementation.contactDetails
        {
            get
            {
                return this.contactDetails;
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.suppliersItem.DetailsClass.IImplementation.orders
        {
            get
            {
                return this.orders;
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.suppliersItem.DetailsClass.IImplementation.countriesItem
        {
            get
            {
                return this.countriesItem;
            }
            set
            {
                this.countriesItem = (global::freibierDB.Implementation.countriesItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("countriesItem");
                }
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.suppliersItem.DetailsClass.IImplementation.supplierStorage
        {
            get
            {
                return this.supplierStorage;
            }
        }
        
        partial void OnFK_countriesChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("countriesItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class supplierStorageItem :
        global::LightSwitchApplication.supplierStorageItem.DetailsClass.IImplementation
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.supplierStorageItem.DetailsClass.IImplementation.beerSuppliersItem
        {
            get
            {
                return this.beerSuppliersItem;
            }
            set
            {
                this.beerSuppliersItem = (global::freibierDB.Implementation.beerSuppliersItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("beerSuppliersItem");
                }
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.supplierStorageItem.DetailsClass.IImplementation.suppliersItem
        {
            get
            {
                return this.suppliersItem;
            }
            set
            {
                this.suppliersItem = (global::freibierDB.Implementation.suppliersItem)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("suppliersItem");
                }
            }
        }
        
        partial void OnFK_beerSuppliersChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("beerSuppliersItem");
            }
        }
        
        partial void OnFK_suppliersChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("suppliersItem");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class view_driver_nextDeliveriesItem :
        global::LightSwitchApplication.view_driver_nextDeliveriesItem.DetailsClass.IImplementation
    {
    
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
}

