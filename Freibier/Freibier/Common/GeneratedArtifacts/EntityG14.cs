

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// Keine modellierte Beschreibung verfügbar
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class OrderReceivedOperation : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initialisiert eine neue Instanz der Entität OrderReceivedOperation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrderReceivedOperation()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrderReceivedOperation(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.OrderReceivedOperation> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReceivedOperation_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReceivedOperation_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Ruft das Application-Objekt für diese Anwendung ab. Das Application-Objekt stellt Zugriff auf aktive Bildschirme, Methoden zum Öffnen von Bildschirmen sowie Zugriff auf den aktuellen Benutzer bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Ruft den übergeordneten Datenarbeitsbereich ab. Der Datenarbeitsbereich stellt Zugriff auf alle Datenquellen in der Anwendung bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.GetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.SetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.GetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.SetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int OrderId
        {
            get
            {
                return global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.GetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.OrderId);
            }
            set
            {
                global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.SetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.OrderId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderId_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ExecutionError
        {
            get
            {
                return global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.GetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.ExecutionError);
            }
            set
            {
                global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.SetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.ExecutionError, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExecutionError_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExecutionError_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExecutionError_Changed();

        /// <summary>
        /// Keine modellierte Beschreibung verfügbar
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ErrorMessage
        {
            get
            {
                return global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.GetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.ErrorMessage);
            }
            set
            {
                global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.SetValue(this, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.ErrorMessage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorMessage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorMessage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorMessage_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.OrderReceivedOperation,
                global::LightSwitchApplication.OrderReceivedOperation.DetailsClass,
                global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.IImplementation,
                global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass>.Entry
                __OrderReceivedOperationEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass>.Entry(
                    global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.__OrderReceivedOperation_CreateNew,
                    global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.__OrderReceivedOperation_Created,
                    global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.__OrderReceivedOperation_AllowSaveWithErrors);
            private static global::LightSwitchApplication.OrderReceivedOperation __OrderReceivedOperation_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.OrderReceivedOperation> es)
            {
                return new global::LightSwitchApplication.OrderReceivedOperation(es);
            }
            private static void __OrderReceivedOperation_Created(global::LightSwitchApplication.OrderReceivedOperation e)
            {
                e.OrderReceivedOperation_Created();
            }
            private static bool __OrderReceivedOperation_AllowSaveWithErrors(global::LightSwitchApplication.OrderReceivedOperation e)
            {
                bool result = false;
                e.OrderReceivedOperation_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int> OrderId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.OrderId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, bool> ExecutionError
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.ExecutionError) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, string> ErrorMessage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties.ErrorMessage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new int OrderId { get; set; }
                new bool ExecutionError { get; set; }
                new string ErrorMessage { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>.Data> c, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.OrderReceivedOperation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.OrderReceivedOperation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>.Entry
                    OrderId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>.Entry(
                        "OrderId",
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._OrderId_Stub,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._OrderId_ComputeIsReadOnly,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._OrderId_Validate,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._OrderId_GetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._OrderId_SetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._OrderId_OnValueChanged);
                private static void _OrderId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>.Data> c, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderId, sf);
                }
                private static bool _OrderId_ComputeIsReadOnly(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    bool result = false;
                    e.OrderId_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrderId_Validate(global::LightSwitchApplication.OrderReceivedOperation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrderId_Validate(r);
                }
                private static int _OrderId_GetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderId;
                }
                private static void _OrderId_SetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, int v)
                {
                    d.ImplementationEntity.OrderId = v;
                }
                private static void _OrderId_OnValueChanged(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    e.OrderId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, bool>.Entry
                    ExecutionError = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, bool>.Entry(
                        "ExecutionError",
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ExecutionError_Stub,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ExecutionError_ComputeIsReadOnly,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ExecutionError_Validate,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ExecutionError_GetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ExecutionError_SetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ExecutionError_OnValueChanged);
                private static void _ExecutionError_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, bool>.Data> c, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, object sf)
                {
                    c(d, ref d._ExecutionError, sf);
                }
                private static bool _ExecutionError_ComputeIsReadOnly(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    bool result = false;
                    e.ExecutionError_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExecutionError_Validate(global::LightSwitchApplication.OrderReceivedOperation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExecutionError_Validate(r);
                }
                private static bool _ExecutionError_GetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d)
                {
                    return d.ImplementationEntity.ExecutionError;
                }
                private static void _ExecutionError_SetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.ExecutionError = v;
                }
                private static void _ExecutionError_OnValueChanged(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    e.ExecutionError_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, string>.Entry
                    ErrorMessage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, string>.Entry(
                        "ErrorMessage",
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ErrorMessage_Stub,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ErrorMessage_ComputeIsReadOnly,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ErrorMessage_Validate,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ErrorMessage_GetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ErrorMessage_SetImplementationValue,
                        global::LightSwitchApplication.OrderReceivedOperation.DetailsClass.PropertySetProperties._ErrorMessage_OnValueChanged);
                private static void _ErrorMessage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, string>.Data> c, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, object sf)
                {
                    c(d, ref d._ErrorMessage, sf);
                }
                private static bool _ErrorMessage_ComputeIsReadOnly(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    bool result = false;
                    e.ErrorMessage_IsReadOnly(ref result);
                    return result;
                }
                private static void _ErrorMessage_Validate(global::LightSwitchApplication.OrderReceivedOperation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ErrorMessage_Validate(r);
                }
                private static string _ErrorMessage_GetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d)
                {
                    return d.ImplementationEntity.ErrorMessage;
                }
                private static void _ErrorMessage_SetImplementationValue(global::LightSwitchApplication.OrderReceivedOperation.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ErrorMessage = v;
                }
                private static void _ErrorMessage_OnValueChanged(global::LightSwitchApplication.OrderReceivedOperation e)
                {
                    e.ErrorMessage_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, int>.Data _OrderId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, bool>.Data _ExecutionError;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OrderReceivedOperation, global::LightSwitchApplication.OrderReceivedOperation.DetailsClass, string>.Data _ErrorMessage;
            
        }
    
        #endregion
    }
    
    #endregion
}
