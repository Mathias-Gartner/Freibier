//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class suppliers
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private suppliers() : base("LightSwitchApplication:suppliers")
        {
            global::LightSwitchApplication.suppliers.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static suppliers CreateInstance()
        {
            return new global::LightSwitchApplication.suppliers(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Ruft das Application-Objekt für diese Anwendung ab. Das Application-Objekt stellt Zugriff auf aktive Bildschirme, Methoden zum Öffnen von Bildschirmen sowie Zugriff auf den aktuellen Benutzer bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Ruft den übergeordneten Datenarbeitsbereich ab. Der Datenarbeitsbereich stellt Zugriff auf alle Datenquellen in der Anwendung bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void suppliers1_SelectionChanged();

        partial void suppliers1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers1_Loaded(bool succeeded);

        partial void beerSuppliers_SelectionChanged();

        partial void beerSuppliers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerSuppliers_Loaded(bool succeeded);

        /// <summary>
        /// Ruft die visuelle suppliers1-Auflistung ab. Diese Auflistung enthält alle Datensätze, die derzeit in der entsprechenden Liste oder im entsprechenden Rastersteuerelement angezeigt werden.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.suppliersItem> suppliers1
        {
            get
            {
                return global::LightSwitchApplication.suppliers.DetailsClass.GetValue(this, global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties.suppliers1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void suppliers1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Ruft die visuelle beerSuppliers-Auflistung ab. Diese Auflistung enthält alle Datensätze, die derzeit in der entsprechenden Liste oder im entsprechenden Rastersteuerelement angezeigt werden.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.beerSuppliersItem> beerSuppliers
        {
            get
            {
                return global::LightSwitchApplication.suppliers.DetailsClass.GetValue(this, global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties.beerSuppliers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerSuppliers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.suppliers.DetailsClass.PropertySet, global::LightSwitchApplication.suppliers.DetailsClass.CommandSet, global::LightSwitchApplication.suppliers.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties.suppliers1;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass>.Entry
                __suppliersEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass>.Entry(
                    global::LightSwitchApplication.suppliers.DetailsClass.__suppliers_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.suppliers.DetailsClass.__suppliers_InvokeSavingEvent,
                    global::LightSwitchApplication.suppliers.DetailsClass.__suppliers_InvokeSavedEvent,
                    global::LightSwitchApplication.suppliers.DetailsClass.__suppliers_InvokeClosingEvent,
                    global::LightSwitchApplication.suppliers.DetailsClass.__suppliers_InvokeCreated,
                    global::LightSwitchApplication.suppliers.DetailsClass.__suppliers_InvokeActivated,
                    global::LightSwitchApplication.suppliers.DetailsClass.__suppliers_InvokeSaveErrorEvent);
            private static void __suppliers_InvokeInitializeDataWorkspace(global::LightSwitchApplication.suppliers s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.suppliers_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __suppliers_InvokeSavingEvent(global::LightSwitchApplication.suppliers s)
            {
                bool handled = false;
                s.suppliers_Saving(ref handled);
                return handled;
            }
            private static void __suppliers_InvokeSavedEvent(global::LightSwitchApplication.suppliers s)
            {
                s.suppliers_Saved();
            }
            private static bool __suppliers_InvokeClosingEvent(global::LightSwitchApplication.suppliers s)
            {
                bool cancel = false;
                s.suppliers_Closing(ref cancel);
                return cancel;
            }
            private static void __suppliers_InvokeCreated(global::LightSwitchApplication.suppliers s)
            {
                s.suppliers_Created();
            }
            private static void __suppliers_InvokeActivated(global::LightSwitchApplication.suppliers s)
            {
                s.suppliers_Activated();
            }
            private static bool __suppliers_InvokeSaveErrorEvent(global::LightSwitchApplication.suppliers s, global::System.Exception ex)
            {
                bool handled = false;
                s.suppliers_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.suppliers.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.suppliers.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.suppliers.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable suppliers1Query()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.freibierDB.suppliers,
                    "country");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable beerSuppliersQuery()
            {
                if (this.Screen.suppliers1.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.beerSuppliersItem> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.beerSuppliersItem>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.suppliers1.SelectedItem.Details.Properties.beerSuppliers).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "beerType");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.suppliersItem>.Data _suppliers1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>.Data _beerSuppliers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.suppliersItem> suppliers1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.suppliersItem>)base.GetItem(global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties.suppliers1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.beerSuppliersItem> beerSuppliers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>)base.GetItem(global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties.beerSuppliers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.suppliersItem>.Entry
                    suppliers1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.suppliersItem>.Entry(
                        "suppliers1",
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._suppliers1_Stub,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._suppliers1_Validate,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._suppliers1_CreateQuery,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._suppliers1_SelectionChanged,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._suppliers1_OnCollectionChanged,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._suppliers1_OnLoaded);
                private static void _suppliers1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.suppliers.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.suppliersItem>.Data> c, global::LightSwitchApplication.suppliers.DetailsClass d, object sf)
                {
                    c(d, ref d._suppliers1, sf);
                }
                private static void _suppliers1_Validate(global::LightSwitchApplication.suppliers s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.suppliers1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _suppliers1_CreateQuery(global::LightSwitchApplication.suppliers.DetailsClass d, object[] args)
                {
                    return d.suppliers1Query();
                }
                private static void _suppliers1_SelectionChanged(global::LightSwitchApplication.suppliers s)
                {
                    s.suppliers1_SelectionChanged();
                }
                private static void _suppliers1_OnCollectionChanged(global::LightSwitchApplication.suppliers s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.suppliers1_Changed(e);
                }
                private static void _suppliers1_OnLoaded(global::LightSwitchApplication.suppliers s, bool succeeded)
                {
                    s.suppliers1_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>.Entry
                    beerSuppliers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>.Entry(
                        "beerSuppliers",
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._beerSuppliers_Stub,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._beerSuppliers_Validate,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._beerSuppliers_CreateQuery,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._beerSuppliers_SelectionChanged,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._beerSuppliers_OnCollectionChanged,
                        global::LightSwitchApplication.suppliers.DetailsClass.PropertySetProperties._beerSuppliers_OnLoaded);
                private static void _beerSuppliers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.suppliers.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.suppliers, global::LightSwitchApplication.suppliers.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>.Data> c, global::LightSwitchApplication.suppliers.DetailsClass d, object sf)
                {
                    c(d, ref d._beerSuppliers, sf);
                }
                private static void _beerSuppliers_Validate(global::LightSwitchApplication.suppliers s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.beerSuppliers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _beerSuppliers_CreateQuery(global::LightSwitchApplication.suppliers.DetailsClass d, object[] args)
                {
                    return d.beerSuppliersQuery();
                }
                private static void _beerSuppliers_SelectionChanged(global::LightSwitchApplication.suppliers s)
                {
                    s.beerSuppliers_SelectionChanged();
                }
                private static void _beerSuppliers_OnCollectionChanged(global::LightSwitchApplication.suppliers s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.beerSuppliers_Changed(e);
                }
                private static void _beerSuppliers_OnLoaded(global::LightSwitchApplication.suppliers s, bool succeeded)
                {
                    s.beerSuppliers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class beerTypes
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private beerTypes() : base("LightSwitchApplication:beerTypes")
        {
            global::LightSwitchApplication.beerTypes.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static beerTypes CreateInstance()
        {
            return new global::LightSwitchApplication.beerTypes(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Ruft das Application-Objekt für diese Anwendung ab. Das Application-Objekt stellt Zugriff auf aktive Bildschirme, Methoden zum Öffnen von Bildschirmen sowie Zugriff auf den aktuellen Benutzer bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Ruft den übergeordneten Datenarbeitsbereich ab. Der Datenarbeitsbereich stellt Zugriff auf alle Datenquellen in der Anwendung bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void beerTypes1_SelectionChanged();

        partial void beerTypes1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes1_Loaded(bool succeeded);

        /// <summary>
        /// Ruft die visuelle beerTypes1-Auflistung ab. Diese Auflistung enthält alle Datensätze, die derzeit in der entsprechenden Liste oder im entsprechenden Rastersteuerelement angezeigt werden.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.beerTypesItem> beerTypes1
        {
            get
            {
                return global::LightSwitchApplication.beerTypes.DetailsClass.GetValue(this, global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties.beerTypes1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerTypes1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass, global::LightSwitchApplication.beerTypes.DetailsClass.PropertySet, global::LightSwitchApplication.beerTypes.DetailsClass.CommandSet, global::LightSwitchApplication.beerTypes.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties.beerTypes1;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass>.Entry
                __beerTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass>.Entry(
                    global::LightSwitchApplication.beerTypes.DetailsClass.__beerTypes_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.beerTypes.DetailsClass.__beerTypes_InvokeSavingEvent,
                    global::LightSwitchApplication.beerTypes.DetailsClass.__beerTypes_InvokeSavedEvent,
                    global::LightSwitchApplication.beerTypes.DetailsClass.__beerTypes_InvokeClosingEvent,
                    global::LightSwitchApplication.beerTypes.DetailsClass.__beerTypes_InvokeCreated,
                    global::LightSwitchApplication.beerTypes.DetailsClass.__beerTypes_InvokeActivated,
                    global::LightSwitchApplication.beerTypes.DetailsClass.__beerTypes_InvokeSaveErrorEvent);
            private static void __beerTypes_InvokeInitializeDataWorkspace(global::LightSwitchApplication.beerTypes s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.beerTypes_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __beerTypes_InvokeSavingEvent(global::LightSwitchApplication.beerTypes s)
            {
                bool handled = false;
                s.beerTypes_Saving(ref handled);
                return handled;
            }
            private static void __beerTypes_InvokeSavedEvent(global::LightSwitchApplication.beerTypes s)
            {
                s.beerTypes_Saved();
            }
            private static bool __beerTypes_InvokeClosingEvent(global::LightSwitchApplication.beerTypes s)
            {
                bool cancel = false;
                s.beerTypes_Closing(ref cancel);
                return cancel;
            }
            private static void __beerTypes_InvokeCreated(global::LightSwitchApplication.beerTypes s)
            {
                s.beerTypes_Created();
            }
            private static void __beerTypes_InvokeActivated(global::LightSwitchApplication.beerTypes s)
            {
                s.beerTypes_Activated();
            }
            private static bool __beerTypes_InvokeSaveErrorEvent(global::LightSwitchApplication.beerTypes s, global::System.Exception ex)
            {
                bool handled = false;
                s.beerTypes_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.beerTypes.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.beerTypes.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.beerTypes.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable beerTypes1Query()
            {
                return this.Screen.DataWorkspace.freibierDB.beerTypes;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass, global::LightSwitchApplication.beerTypesItem>.Data _beerTypes1;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass, global::LightSwitchApplication.beerTypesItem> beerTypes1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass, global::LightSwitchApplication.beerTypesItem>)base.GetItem(global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties.beerTypes1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass, global::LightSwitchApplication.beerTypesItem>.Entry
                    beerTypes1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass, global::LightSwitchApplication.beerTypesItem>.Entry(
                        "beerTypes1",
                        global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties._beerTypes1_Stub,
                        global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties._beerTypes1_Validate,
                        global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties._beerTypes1_CreateQuery,
                        global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties._beerTypes1_SelectionChanged,
                        global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties._beerTypes1_OnCollectionChanged,
                        global::LightSwitchApplication.beerTypes.DetailsClass.PropertySetProperties._beerTypes1_OnLoaded);
                private static void _beerTypes1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.beerTypes.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.beerTypes, global::LightSwitchApplication.beerTypes.DetailsClass, global::LightSwitchApplication.beerTypesItem>.Data> c, global::LightSwitchApplication.beerTypes.DetailsClass d, object sf)
                {
                    c(d, ref d._beerTypes1, sf);
                }
                private static void _beerTypes1_Validate(global::LightSwitchApplication.beerTypes s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.beerTypes1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _beerTypes1_CreateQuery(global::LightSwitchApplication.beerTypes.DetailsClass d, object[] args)
                {
                    return d.beerTypes1Query();
                }
                private static void _beerTypes1_SelectionChanged(global::LightSwitchApplication.beerTypes s)
                {
                    s.beerTypes1_SelectionChanged();
                }
                private static void _beerTypes1_OnCollectionChanged(global::LightSwitchApplication.beerTypes s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.beerTypes1_Changed(e);
                }
                private static void _beerTypes1_OnLoaded(global::LightSwitchApplication.beerTypes s, bool succeeded)
                {
                    s.beerTypes1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class countries
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private countries() : base("LightSwitchApplication:countries")
        {
            global::LightSwitchApplication.countries.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static countries CreateInstance()
        {
            return new global::LightSwitchApplication.countries(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Ruft das Application-Objekt für diese Anwendung ab. Das Application-Objekt stellt Zugriff auf aktive Bildschirme, Methoden zum Öffnen von Bildschirmen sowie Zugriff auf den aktuellen Benutzer bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Ruft den übergeordneten Datenarbeitsbereich ab. Der Datenarbeitsbereich stellt Zugriff auf alle Datenquellen in der Anwendung bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void countries1_SelectionChanged();

        partial void countries1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries1_Loaded(bool succeeded);

        /// <summary>
        /// Ruft die visuelle countries1-Auflistung ab. Diese Auflistung enthält alle Datensätze, die derzeit in der entsprechenden Liste oder im entsprechenden Rastersteuerelement angezeigt werden.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.countriesItem> countries1
        {
            get
            {
                return global::LightSwitchApplication.countries.DetailsClass.GetValue(this, global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties.countries1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countries1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass, global::LightSwitchApplication.countries.DetailsClass.PropertySet, global::LightSwitchApplication.countries.DetailsClass.CommandSet, global::LightSwitchApplication.countries.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties.countries1;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass>.Entry
                __countriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass>.Entry(
                    global::LightSwitchApplication.countries.DetailsClass.__countries_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.countries.DetailsClass.__countries_InvokeSavingEvent,
                    global::LightSwitchApplication.countries.DetailsClass.__countries_InvokeSavedEvent,
                    global::LightSwitchApplication.countries.DetailsClass.__countries_InvokeClosingEvent,
                    global::LightSwitchApplication.countries.DetailsClass.__countries_InvokeCreated,
                    global::LightSwitchApplication.countries.DetailsClass.__countries_InvokeActivated,
                    global::LightSwitchApplication.countries.DetailsClass.__countries_InvokeSaveErrorEvent);
            private static void __countries_InvokeInitializeDataWorkspace(global::LightSwitchApplication.countries s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.countries_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __countries_InvokeSavingEvent(global::LightSwitchApplication.countries s)
            {
                bool handled = false;
                s.countries_Saving(ref handled);
                return handled;
            }
            private static void __countries_InvokeSavedEvent(global::LightSwitchApplication.countries s)
            {
                s.countries_Saved();
            }
            private static bool __countries_InvokeClosingEvent(global::LightSwitchApplication.countries s)
            {
                bool cancel = false;
                s.countries_Closing(ref cancel);
                return cancel;
            }
            private static void __countries_InvokeCreated(global::LightSwitchApplication.countries s)
            {
                s.countries_Created();
            }
            private static void __countries_InvokeActivated(global::LightSwitchApplication.countries s)
            {
                s.countries_Activated();
            }
            private static bool __countries_InvokeSaveErrorEvent(global::LightSwitchApplication.countries s, global::System.Exception ex)
            {
                bool handled = false;
                s.countries_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.countries.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.countries.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.countries.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable countries1Query()
            {
                return this.Screen.DataWorkspace.freibierDB.countries;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass, global::LightSwitchApplication.countriesItem>.Data _countries1;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass, global::LightSwitchApplication.countriesItem> countries1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass, global::LightSwitchApplication.countriesItem>)base.GetItem(global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties.countries1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass, global::LightSwitchApplication.countriesItem>.Entry
                    countries1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass, global::LightSwitchApplication.countriesItem>.Entry(
                        "countries1",
                        global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties._countries1_Stub,
                        global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties._countries1_Validate,
                        global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties._countries1_CreateQuery,
                        global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties._countries1_SelectionChanged,
                        global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties._countries1_OnCollectionChanged,
                        global::LightSwitchApplication.countries.DetailsClass.PropertySetProperties._countries1_OnLoaded);
                private static void _countries1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.countries.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.countries, global::LightSwitchApplication.countries.DetailsClass, global::LightSwitchApplication.countriesItem>.Data> c, global::LightSwitchApplication.countries.DetailsClass d, object sf)
                {
                    c(d, ref d._countries1, sf);
                }
                private static void _countries1_Validate(global::LightSwitchApplication.countries s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.countries1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _countries1_CreateQuery(global::LightSwitchApplication.countries.DetailsClass d, object[] args)
                {
                    return d.countries1Query();
                }
                private static void _countries1_SelectionChanged(global::LightSwitchApplication.countries s)
                {
                    s.countries1_SelectionChanged();
                }
                private static void _countries1_OnCollectionChanged(global::LightSwitchApplication.countries s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.countries1_Changed(e);
                }
                private static void _countries1_OnLoaded(global::LightSwitchApplication.countries s, bool succeeded)
                {
                    s.countries1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class newOrder
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private newOrder() : base("LightSwitchApplication:newOrder")
        {
            global::LightSwitchApplication.newOrder.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static newOrder CreateInstance()
        {
            return new global::LightSwitchApplication.newOrder(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void newOrder_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void newOrder_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void newOrder_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void newOrder_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void newOrder_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void newOrder_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void newOrder_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Ruft das Application-Objekt für diese Anwendung ab. Das Application-Objekt stellt Zugriff auf aktive Bildschirme, Methoden zum Öffnen von Bildschirmen sowie Zugriff auf den aktuellen Benutzer bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Ruft den übergeordneten Datenarbeitsbereich ab. Der Datenarbeitsbereich stellt Zugriff auf alle Datenquellen in der Anwendung bereit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void orderProperty_Changed();

        partial void beerSuppliersBySupplier_SelectionChanged();

        partial void beerSuppliersBySupplier_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerSuppliersBySupplier_Loaded(bool succeeded);

        partial void orderedBeers_SelectionChanged();

        partial void orderedBeers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void orderedBeers_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Order orderProperty
        {
            get 
            {
                return global::LightSwitchApplication.newOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties.orderProperty);
            }
            set
            {
                global::LightSwitchApplication.newOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties.orderProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void orderProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Ruft die visuelle beerSuppliersBySupplier-Auflistung ab. Diese Auflistung enthält alle Datensätze, die derzeit in der entsprechenden Liste oder im entsprechenden Rastersteuerelement angezeigt werden.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.beerSuppliersItem> beerSuppliersBySupplier
        {
            get
            {
                return global::LightSwitchApplication.newOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties.beerSuppliersBySupplier);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void beerSuppliersBySupplier_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Ruft die visuelle orderedBeers-Auflistung ab. Diese Auflistung enthält alle Datensätze, die derzeit in der entsprechenden Liste oder im entsprechenden Rastersteuerelement angezeigt werden.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.orderedBeersItem> orderedBeers
        {
            get
            {
                return global::LightSwitchApplication.newOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties.orderedBeers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void orderedBeers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.newOrder.DetailsClass.PropertySet, global::LightSwitchApplication.newOrder.DetailsClass.CommandSet, global::LightSwitchApplication.newOrder.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties.orderProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass>.Entry
                __newOrderEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass>.Entry(
                    global::LightSwitchApplication.newOrder.DetailsClass.__newOrder_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.newOrder.DetailsClass.__newOrder_InvokeSavingEvent,
                    global::LightSwitchApplication.newOrder.DetailsClass.__newOrder_InvokeSavedEvent,
                    global::LightSwitchApplication.newOrder.DetailsClass.__newOrder_InvokeClosingEvent,
                    global::LightSwitchApplication.newOrder.DetailsClass.__newOrder_InvokeCreated,
                    global::LightSwitchApplication.newOrder.DetailsClass.__newOrder_InvokeActivated,
                    global::LightSwitchApplication.newOrder.DetailsClass.__newOrder_InvokeSaveErrorEvent);
            private static void __newOrder_InvokeInitializeDataWorkspace(global::LightSwitchApplication.newOrder s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.newOrder_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __newOrder_InvokeSavingEvent(global::LightSwitchApplication.newOrder s)
            {
                bool handled = false;
                s.newOrder_Saving(ref handled);
                return handled;
            }
            private static void __newOrder_InvokeSavedEvent(global::LightSwitchApplication.newOrder s)
            {
                s.newOrder_Saved();
            }
            private static bool __newOrder_InvokeClosingEvent(global::LightSwitchApplication.newOrder s)
            {
                bool cancel = false;
                s.newOrder_Closing(ref cancel);
                return cancel;
            }
            private static void __newOrder_InvokeCreated(global::LightSwitchApplication.newOrder s)
            {
                s.newOrder_Created();
            }
            private static void __newOrder_InvokeActivated(global::LightSwitchApplication.newOrder s)
            {
                s.newOrder_Activated();
            }
            private static bool __newOrder_InvokeSaveErrorEvent(global::LightSwitchApplication.newOrder s, global::System.Exception ex)
            {
                bool handled = false;
                s.newOrder_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.newOrder.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.newOrder.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.newOrder.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable beerSuppliersBySupplierQuery(global::System.Nullable<int> supplier)
            {
                return this.Screen.DataWorkspace.freibierDB.beerSuppliersBySupplier(supplier);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable orderedBeersQuery()
            {
                if (this.Screen.orderProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.orderedBeersItem> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.orderedBeersItem>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.orderProperty.Details.Properties.orderedBeers).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "beerSupplier");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.Order>.Data _orderProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>.Data _beerSuppliersBySupplier;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.orderedBeersItem>.Data _orderedBeers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.Order> orderProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.Order>)base.GetItem(global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties.orderProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.beerSuppliersItem> beerSuppliersBySupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>)base.GetItem(global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties.beerSuppliersBySupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.orderedBeersItem> orderedBeers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.orderedBeersItem>)base.GetItem(global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties.orderedBeers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.Order>.Entry
                    orderProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.Order>.Entry(
                        "orderProperty",
                        false,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderProperty_Stub,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderProperty_Validate,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderProperty_OnValueChanged);
                private static void _orderProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.newOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.Order>.Data> c, global::LightSwitchApplication.newOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._orderProperty, sf);
                }
                private static void _orderProperty_Validate(global::LightSwitchApplication.newOrder s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.orderProperty_Validate(r);
                }
                private static void _orderProperty_OnValueChanged(global::LightSwitchApplication.newOrder s)
                {
                    s.orderProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>.Entry
                    beerSuppliersBySupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>.Entry(
                        "beerSuppliersBySupplier",
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._beerSuppliersBySupplier_Stub,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._beerSuppliersBySupplier_Validate,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._beerSuppliersBySupplier_CreateQuery,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._beerSuppliersBySupplier_SelectionChanged,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._beerSuppliersBySupplier_OnCollectionChanged,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._beerSuppliersBySupplier_OnLoaded);
                private static void _beerSuppliersBySupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.newOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.beerSuppliersItem>.Data> c, global::LightSwitchApplication.newOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._beerSuppliersBySupplier, sf);
                }
                private static void _beerSuppliersBySupplier_Validate(global::LightSwitchApplication.newOrder s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.beerSuppliersBySupplier_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _beerSuppliersBySupplier_CreateQuery(global::LightSwitchApplication.newOrder.DetailsClass d, object[] args)
                {
                    return d.beerSuppliersBySupplierQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _beerSuppliersBySupplier_SelectionChanged(global::LightSwitchApplication.newOrder s)
                {
                    s.beerSuppliersBySupplier_SelectionChanged();
                }
                private static void _beerSuppliersBySupplier_OnCollectionChanged(global::LightSwitchApplication.newOrder s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.beerSuppliersBySupplier_Changed(e);
                }
                private static void _beerSuppliersBySupplier_OnLoaded(global::LightSwitchApplication.newOrder s, bool succeeded)
                {
                    s.beerSuppliersBySupplier_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.orderedBeersItem>.Entry
                    orderedBeers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.orderedBeersItem>.Entry(
                        "orderedBeers",
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderedBeers_Stub,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderedBeers_Validate,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderedBeers_CreateQuery,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderedBeers_SelectionChanged,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderedBeers_OnCollectionChanged,
                        global::LightSwitchApplication.newOrder.DetailsClass.PropertySetProperties._orderedBeers_OnLoaded);
                private static void _orderedBeers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.newOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.newOrder, global::LightSwitchApplication.newOrder.DetailsClass, global::LightSwitchApplication.orderedBeersItem>.Data> c, global::LightSwitchApplication.newOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._orderedBeers, sf);
                }
                private static void _orderedBeers_Validate(global::LightSwitchApplication.newOrder s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.orderedBeers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _orderedBeers_CreateQuery(global::LightSwitchApplication.newOrder.DetailsClass d, object[] args)
                {
                    return d.orderedBeersQuery();
                }
                private static void _orderedBeers_SelectionChanged(global::LightSwitchApplication.newOrder s)
                {
                    s.orderedBeers_SelectionChanged();
                }
                private static void _orderedBeers_OnCollectionChanged(global::LightSwitchApplication.newOrder s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.orderedBeers_Changed(e);
                }
                private static void _orderedBeers_OnLoaded(global::LightSwitchApplication.newOrder s, bool succeeded)
                {
                    s.orderedBeers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}
